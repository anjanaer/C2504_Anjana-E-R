Requirement 1
Read and display Quest Mantis exported CSV file. 
[…] button
When […] is clicked, show Open file dialog. Display selected file path in the [File name] textbox. Show error message if file type is not csv.
Show Details button
When the [Show Details] button is clicked, read the csv file mentioned in the [File name] text box and display content in the Bug details table.
This button should be disabled if [File name] text box is empty.
Big Detail table
The number of columns and column names in the table shall be same as the CSV file header. The number of rows should be equal to the number of rows in the CSV file.
e.g.
 
Column name1 = Id, Column name 2 = Project etc. 
Requirement 2
Add filter conditions and update bug details table based on filter conditions.
 
Show all column names in the filter conditions. When selecting a column name, then show unique row content like Excel filter.
Apply Filter button
When [Apply Filter] button is clicked, update bug details table with all filter conditions.
Reset Filter button
When [Reset Filter] button is clicked, update bug details table.
Import Filter button
When [Import Filter] button is clicked, import filter conditions from selected XML file. 
Export Filter button
When [Export Filter] button is clicked, save filter conditions in the XML format.
 
<Window x:Class="ClarificationDetailsProject.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ClarificationDetailsProject"
        xmlns:controls="clr-namespace:ClarificationDetailsProject.CustomControls" xmlns:viewmodels="clr-namespace:ClarificationDetailsProject.ViewModels" d:DataContext="{d:DesignInstance Type=viewmodels:ClarificationViewModel}"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" WindowState="Maximized">
    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
        <Grid MaxWidth="1200" Margin="10" Height="424" Width="765">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <Border Grid.Row="0" BorderBrush="gray" BorderThickness="1">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal" Margin="10">
                        <TextBlock Text="FilePath: " VerticalAlignment="Center" Width="60" />
                        <TextBox Width="400" Height="30" Margin="10 0 0 0" Padding="4 4 4 4" IsEnabled="False" Text="{Binding FilePath , Mode=TwoWay}"/>
                        <Button Content="..." Command="{Binding ShowDialogCommand}" Margin="10 0 0 0">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="teal" CornerRadius="3" Padding="5">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="10">
                        <TextBlock Text="FileName: " VerticalAlignment="Center" Width="60"/>
                        <TextBox Width="400" Height="30" Margin="10 0 0 0" Padding="4 4 4 4" IsEnabled="False" Text="{Binding FileName , Mode=TwoWay}"/>
                        <Button Content="{Binding ButtonText , Mode=TwoWay}" Margin="10 0 0 0" Command="{Binding LoadExcelCommand}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal"></StackPanel>
                </StackPanel>
            </Border>

            <Border Grid.Row="1" BorderBrush="gray" BorderThickness="1" Margin="0 10 0 0">
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="Filter Conditons" Margin="10 10 0 0" FontWeight="Bold"/>
                    <StackPanel Orientation="Horizontal" Margin="10">
                        <TextBlock Text="Modules: " VerticalAlignment="Center" Width="70"/>
                        <WrapPanel Orientation="Horizontal" Width="300">
                            <CheckBox x:Name="Modules" Content="Select All" 
              IsChecked="{Binding IsAllChecked, Mode=TwoWay}" Margin="10"/>
                            <ItemsControl ItemsSource="{Binding Modules}" Margin="0 0 0 0">
                                <ItemsControl.ItemsPanel>
                                    <!-- Set WrapPanel as the panel for ItemsControl items -->
                                    <ItemsPanelTemplate>
                                        <WrapPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <CheckBox Margin="10 0 0 0" Content="{Binding Name}" 
                          IsChecked="{Binding IsChecked, Mode=TwoWay}" 
                          Checked="ModulesChecked"
                          Unchecked="ModulesUnchecked"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </WrapPanel>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="10">
                        <TextBlock Text="Date: " VerticalAlignment="Center" Width="70"/>
                        <TextBlock Text="From:" VerticalAlignment="Center"/>
                        <DatePicker Name="datePicker1" Margin="10 0 0 0"
                                    SelectedDate="{Binding FilterFromDate, Mode=TwoWay}"/>

                        <TextBlock Text="To:" VerticalAlignment="Center" Margin="10 0 0 0"/>
                        <DatePicker Name="datePicker2" Margin="10 0 0 0"
                                     SelectedDate="{Binding FilterToDate, Mode=TwoWay}"/>

                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="10">
                        <TextBlock Text="Status: " VerticalAlignment="Center" Width="70"/>
                        <ComboBox Name="comboBox" Text="{Binding FilterStatus}">
                            <ComboBoxItem Content="All"/>
                            <ComboBoxItem Content="Open"/>
                            <ComboBoxItem Content="Closed"/>
                            <ComboBoxItem Content="Pending"/>
                            <ComboBoxItem Content="On Hold"/>
                        </ComboBox>
                        <Button Content="Apply Filters" Width="300" Margin="30 0 0 0" Command="{Binding ApplyFilterCommand}"/>
                        <Button Content="Reset Filters" Width="300" Margin="30 0 0 0" Command="{Binding ResetFilterCommand}"/>
                    </StackPanel>
                </StackPanel>
            </Border>

            <Border Grid.Row="2" BorderBrush="gray" BorderThickness="1" Margin="0 10 0 0">
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="Search Conditions" FontWeight="Bold" Margin="10 10 0 0"/>
                    <StackPanel Orientation="Horizontal" Margin="10">
                        <TextBlock Text="Search Text: " VerticalAlignment="Center" />
                        <TextBox Width="400" Height="30" Margin="10 0 0 0" Padding="4 4 4 4"
                                 Text="{Binding SearchText}"/>
                        <Button Content="Search" Width="100" Margin="10 0 0 0" Command="{Binding ApplyFilterCommand}"/>
                    </StackPanel>
                </StackPanel>
            </Border>

            <Border Grid.Row="3" BorderBrush="gray" BorderThickness="1" Margin="0 10 0 0">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal" Margin="10 10 0 0">
                        <TextBlock Text="Clarification Count :" FontWeight="Bold" />
                        <TextBlock>
                            <TextBlock.Text>
                                <MultiBinding StringFormat=" {0}/{1}">
                                    <!-- Bind to FilteredClarifications.Count -->
                                    <Binding Path="FilteredClarifications.Count" />
                                    <!-- Bind to Clarifications.Count -->
                                    <Binding Path="TempClarifications.Count" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </StackPanel>
                    <TabControl SelectedItem="{Binding SelectedTab , Mode=TwoWay}" Margin="0 10 0 0">
                        <TabItem Header="Details" Width="100" Height="30">
                            <controls:DetailsGridControl Items="{Binding Clarifications}"/>
                        </TabItem>
                        <TabItem Header="Summary" Width="100" Height="30">
                            <controls:SummaryGridControl Items="{Binding Summaries}"/>
                        </TabItem>
                    </TabControl>
                    <Button Content="Export" HorizontalAlignment="Right" Margin="10"
                            Command="{Binding ExportToExcelCommand}"/>
                </StackPanel>
            </Border>
        </Grid>
    </ScrollViewer>
</Window>
