<Border Grid.Row="2" BorderBrush="Gray" BorderThickness="1" Margin="10">
    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Margin="10">
        <StackPanel Orientation="Vertical" Margin="10">
            <!-- Label -->
            <TextBlock Text="Filter Conditions" FontWeight="Bold" Margin="0,0,0,10"/>

            <!-- Dynamic Filter Rows -->
            <ItemsControl ItemsSource="{Binding ColumnFilters}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" Margin="0,5,0,5">
                            <!-- ComboBox for Column Selection -->
                            <ComboBox Width="200" Height="30" 
                                      ItemsSource="{Binding ColumnNames}" 
                                      SelectedItem="{Binding SelectedColumn}" 
                                      VerticalAlignment="Center" 
                                      Margin="0,0,10,0" />

                            <!-- ListBox for Unique Values -->
                            <ListBox Width="300" Height="150" 
                                     ItemsSource="{Binding FilterValues}" 
                                     SelectionMode="Multiple" 
                                     Margin="0,0,10,0">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <CheckBox Content="{Binding Value}" 
                                                  IsChecked="{Binding IsSelected}" />
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <!-- Buttons -->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,10,0,0">
                <Button Content="Apply Filter" Width="100" Height="30" Margin="5" Command="{Binding ApplyFilterCommand}" />
                <Button Content="Reset Filter" Width="100" Height="30" Margin="5" Command="{Binding ResetFilterCommand}" />
                <Button Content="Import Filter..." Width="100" Height="30" Margin="5" Command="{Binding ImportFilterCommand}" />
                <Button Content="Export Filter..." Width="100" Height="30" Margin="5" Command="{Binding ExportFilterCommand}" />
            </StackPanel>
        </StackPanel>
    </ScrollViewer>
</Border>


public ObservableCollection<ColumnFilter> ColumnFilters { get; set; }
public ObservableCollection<string> ColumnNames { get; set; } // List of 44 column names

public class ColumnFilter
{
    public string SelectedColumn { get; set; } // Selected column name
    public ObservableCollection<FilterItem> FilterValues { get; set; } // Unique values for the selected column
}

public class FilterItem
{
    public string Value { get; set; } // Display value
    public bool IsSelected { get; set; } // Whether the item is checked
}



public void InitializeFilters()
{
    ColumnFilters = new ObservableCollection<ColumnFilter>();
    foreach (var columnName in ColumnNames)
    {
        ColumnFilters.Add(new ColumnFilter
        {
            SelectedColumn = columnName,
            FilterValues = new ObservableCollection<FilterItem>()
        });
    }
}


private void UpdateFilterValues(ColumnFilter filter)
{
    if (filter.SelectedColumn != null)
    {
        // Fetch unique values for the selected column
        var uniqueValues = GetUniqueValuesForColumn(filter.SelectedColumn);
        filter.FilterValues.Clear();
        foreach (var value in uniqueValues)
        {
            filter.FilterValues.Add(new FilterItem { Value = value, IsSelected = false });
        }
    }
}



private IEnumerable<string> GetUniqueValuesForColumn(string columnName)
{
    // Use reflection to get values for the specified column
    return OriginalData
        .Select(item =>
        {
            var property = item.GetType().GetProperty(columnName);
            return property?.GetValue(item)?.ToString();
        })
        .Where(value => !string.IsNullOrEmpty(value)) // Exclude null or empty values
        .Distinct() // Get unique values
        .OrderBy(value => value) // Optional: sort the values
        .ToList();
}
---------------------------------------------------------------

<DataGrid x:Name="dataGrid" Grid.Row="3" ItemsSource="{Binding FilteredData}" AutoGenerateColumns="False">
    <DataGrid.Columns>
        <!-- Reporter Column -->
        <DataGridTemplateColumn Header="Reporter">
            <DataGridTemplateColumn.HeaderTemplate>
                <DataTemplate>
                    <StackPanel>
                        <TextBlock Text="Reporter" HorizontalAlignment="Center"/>
                        <ComboBox Width="100"
                                  ItemsSource="{Binding ReporterFilterOptions}"
                                  SelectedItem="{Binding SelectedReporterFilter, Mode=TwoWay}" />
                    </StackPanel>
                </DataTemplate>
            </DataGridTemplateColumn.HeaderTemplate>
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Reporter}" />
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>

        <!-- Status Column -->
        <DataGridTemplateColumn Header="Status">
            <DataGridTemplateColumn.HeaderTemplate>
                <DataTemplate>
                    <StackPanel>
                        <TextBlock Text="Status" HorizontalAlignment="Center"/>
                        <ComboBox Width="100"
                                  ItemsSource="{Binding StatusFilterOptions}"
                                  SelectedItem="{Binding SelectedStatusFilter, Mode=TwoWay}" />
                    </StackPanel>
                </DataTemplate>
            </DataGridTemplateColumn.HeaderTemplate>
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Status}" />
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>

        <!-- Summary Column -->
        <DataGridTemplateColumn Header="Summary">
            <DataGridTemplateColumn.HeaderTemplate>
                <DataTemplate>
                    <StackPanel>
                        <TextBlock Text="Summary" HorizontalAlignment="Center"/>
                        <TextBox Width="100"
                                 Text="{Binding SelectedSummaryFilter, Mode=TwoWay}" />
                    </StackPanel>
                </DataTemplate>
            </DataGridTemplateColumn.HeaderTemplate>
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Summary}" />
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
    </DataGrid.Columns>
</DataGrid>

