1.Myassesment program
Problem Statement: Doctor Prescription System
- Define a class: `DoctorPrescription` with the following properties:
- `DoctorID` (integer)
- `PatientName` (string)
- `Medication` (string)
- `Dosage` (double, in milligrams)
- Tasks:
1. Data Input:
- Read N `doctorPrescriptions` from the keyboard.
2. Find Minimum Dosage by a Specific Doctor:
- For a given doctor's ID, display the prescription with the least dosage prescribed by them.
Solve in time complexity of O(N).
Dont use built-in C# sorting or LINQ.
3. Find Third Maximum Dosage Overall:
- Display the prescription with the third maximum dosage across all doctors.
Solve in time complexity of O(N).
Dont use built-in C# sorting or LINQ.
4. Sort by Patient Name:
- Implement and call your own sorting algorithm.
Dont use built-in C# sorting or LINQ.
----------------------------------------------------------------------------------------------------------------------------------

namespace ConsoleApp6
{
    public class DoctorPrescription
    {
        public int DoctorID { get; set; }
        public string PatientName { get; set; }
        public string Medication { get; set; }
        public double Dosage { get; set; }

        public DoctorPrescription(int doctorID, string patientName, string medication, double dosage)
        {
            DoctorID = doctorID;
            PatientName = patientName;
            Medication = medication;
            Dosage = dosage;
        }

        public override string ToString()
        {
            return $"Doctor ID: {DoctorID}, Patient Name: {PatientName}, Medication: {Medication}, Dosage: {Dosage} mg";
        }
    }
    public class DoctorPrescriptionService
    {
        public static void Read(DoctorPrescription[] prescriptions)
        {
            for (int i = 0; i < prescriptions.Length; i++)
            {
                Console.WriteLine($"Enter the details for Prescription {i + 1}:");
                Console.Write("Doctor ID: ");
                int doctorID = int.Parse(Console.ReadLine());

                Console.Write("Patient Name: ");
                string patientName = Console.ReadLine();

                Console.Write("Medication: ");
                string medication = Console.ReadLine();

                Console.Write("Dosage in milligrams: ");
                double dosage = double.Parse(Console.ReadLine());

                prescriptions[i] = new DoctorPrescription(doctorID, patientName, medication, dosage);
            }
        }

        public static void Sort(DoctorPrescription[] prescriptions)
        {
            for (int i = 0; i < prescriptions.Length - 1; i++)
            {
                int minIndex = i;
                for (int j = i + 1; j < prescriptions.Length; j++)
                {
                    if (prescriptions[j].PatientName.CompareTo(prescriptions[minIndex].PatientName) < 0)
                    {
                        minIndex = j;
                    }
                }

                if (minIndex != i)
                {
                    DoctorPrescription temp = prescriptions[i];
                    prescriptions[i] = prescriptions[minIndex];
                    prescriptions[minIndex] = temp;
                }
            }
        }

        public static DoctorPrescription FindMax(DoctorPrescription[] prescriptions)
        {
            DoctorPrescription maxDosage = prescriptions[0];
            foreach (var prescription in prescriptions)
            {
                if (prescription.Dosage > maxDosage.Dosage)
                {
                    maxDosage = prescription;
                }
            }

            return maxDosage;
        }

        public static DoctorPrescription FindThirdMin(DoctorPrescription[] prescriptions)
        {
            double firstMinDosage = double.MaxValue;
            double secondMinDosage = double.MaxValue;
            double thirdMinDosage = double.MaxValue;
            DoctorPrescription thirdMinPrescription = null;

            foreach (var prescription in prescriptions)
            {
                if (prescription.Dosage < firstMinDosage)
                {
                    thirdMinDosage = secondMinDosage;
                    secondMinDosage = firstMinDosage;
                    firstMinDosage = prescription.Dosage;
                }
                else if (prescription.Dosage < secondMinDosage && prescription.Dosage != firstMinDosage)
                {
                    thirdMinDosage = secondMinDosage;
                    secondMinDosage = prescription.Dosage;
                }
                else if (prescription.Dosage < thirdMinDosage && prescription.Dosage != secondMinDosage && prescription.Dosage != firstMinDosage)
                {
                    thirdMinDosage = prescription.Dosage;
                }
            }

            foreach (var prescription in prescriptions)
            {
                if (prescription.Dosage == thirdMinDosage)
                {
                    thirdMinPrescription = prescription;
                    break;
                }
            }

            return thirdMinPrescription;
        }
    }
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Enter the number of prescriptions: ");
            int n = int.Parse(Console.ReadLine());
            DoctorPrescription[] prescriptions = new DoctorPrescription[n];

            DoctorPrescriptionService.Read(prescriptions);

            DoctorPrescription max = DoctorPrescriptionService.FindMax(prescriptions);
            Console.WriteLine($"Max Dosage: {max}");

            DoctorPrescription thirdMin = DoctorPrescriptionService.FindThirdMin(prescriptions);
            Console.WriteLine($"Third Minimum Dosage: {thirdMin}");

            DoctorPrescriptionService.Sort(prescriptions);

            Console.WriteLine("\nSorted Prescriptions by Patient Name:");
            foreach (var prescription in prescriptions)
            {
                Console.WriteLine(prescription);
            }
        }
    }
}
