/// <summary>
/// Retrieves column names from the Excel file.
/// </summary>
/// <param name="filePath">The path of the Excel file.</param>
/// <returns>A list of column names from the Excel file.</returns>
public List<string> GetColumnNames(string filePath)
{
    var columnNames = new List<string>();

    if (File.Exists(filePath))
    {
        using (var workbook = new XLWorkbook(filePath))
        {
            var worksheet = workbook.Worksheet(1); // Read the first worksheet
            var headerRow = worksheet.FirstRowUsed(); // Get the header row
            foreach (var cell in headerRow.Cells())
            {
                columnNames.Add(cell.GetValue<string>());
            }
        }
    }

    return columnNames;
}



private void LoadData()
{
    if (!string.IsNullOrEmpty(FilePath))
    {
        var data = _repository.ReadExcelFile(FilePath);
        Data = new ObservableCollection<ExcelData>(data);
        FilteredData = new ObservableCollection<ExcelData>(data);

        // Load column names dynamically
        var columnNames = _repository.GetColumnNames(FilePath);
        ColumnNames = new ObservableCollection<string>(columnNames);

        LoadFilterValues();
    }
}


public MainViewModel()
{
    _repository = new ExcelRepository();

    // Commands
    ShowDialogCommand = new RelayCommand(ShowDialog);
    LoadCommand = new RelayCommand(LoadData);
    CloseCommand = new RelayCommand(() => Application.Current.Shutdown());
    ApplyFilterCommand = new RelayCommand(ApplyFilter);
    ResetFilterCommand = new RelayCommand(ResetFilter);

    // Initialize Collections
    ColumnNames = new ObservableCollection<string>();
    FilteredData = new ObservableCollection<ExcelData>();
    filterValues = new ObservableCollection<FilterItem>();
}


