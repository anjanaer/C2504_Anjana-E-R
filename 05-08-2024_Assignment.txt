ASSIGNMENT

QUERIES

CREATE DATABASE emp_search_db;
USE emp_search_db;
CREATE TABLE DEPT (
    DEPTNO INT PRIMARY KEY,
    DNAME VARCHAR(50),
    LOC VARCHAR(50)
);

INSERT INTO DEPT (DEPTNO, DNAME, LOC) VALUES
(10, 'ACCOUNTING', 'NEW YORK'),
(20, 'RESEARCH', 'DALLAS'),
(30, 'SALES', 'CHICAGO'),
(40, 'OPERATIONS', 'BOSTON');

CREATE TABLE EMP (
    EMPNO INT PRIMARY KEY,
    ENAME VARCHAR(50),
    JOB VARCHAR(50),
    MGR INT,
    HIREDATE DATE,
    SAL DECIMAL(10, 2),
    COMM DECIMAL(10, 2),
    DEPTNO INT,
    FOREIGN KEY (DEPTNO) REFERENCES DEPT(DEPTNO)
);

INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES
(7369, 'SMITH', 'CLERK', 7902, '2010-12-17', 800.00, NULL, 20),
(7499, 'ALLEN', 'SALESMAN', 7698, '2011-02-20', 1600.00, 300.00, 30),
(7521, 'WARD', 'SALESMAN', 7698, '2011-02-22', 1250.00, 500.00, 30),
(7566, 'JONES', 'MANAGER', 7839, '2011-04-02', 2975.00, NULL, 20),
(7654, 'MARTIN', 'SALESMAN', 7698, '2011-09-28', 1250.00, 1400.00, 30),
(7698, 'BLAKE', 'MANAGER', 7839, '2011-05-01', 2850.00, NULL, 30),
(7782, 'CLARK', 'MANAGER', 7839, '2011-06-09', 2450.00, NULL, 10),
(7788, 'SCOTT', 'ANALYST', 7566, '2012-12-09', 3000.00, NULL, 20),
(7839, 'KING', 'PRESIDENT', NULL, '2011-11-17', 5000.00, NULL, 10),
(7844, 'TURNER', 'SALESMAN', 7698, '2011-09-08', 1500.00, 0.00, 30),
(7876, 'ADAMS', 'CLERK', 7788, '2013-01-12', 1100.00, NULL, 20),
(7900, 'JAMES', 'CLERK', 7698, '2011-12-03', 950.00, NULL, 30),
(7902, 'FORD', 'ANALYST', 7566, '2011-12-03', 3000.00, NULL, 20),
(7934, 'MILLER', 'CLERK', 7782, '2012-01-23', 1300.00, NULL, 10);

SELECT * FROM dept;
SELECT DEPTNO,DNAME,LOC
FROM dept
WHERE DEPTNO=30;
SELECT DEPTNO,DNAME,LOC
FROM dept
WHERE DEPTNO=30;
SELECT * FROM emp;
SELECT * FROM EMP WHERE DEPTNO = 20;
SELECT EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO
FROM emp 
WHERE year(HIREDATE)='2011'
ORDER BY SAL DESC,ENAME;
--display employee empno,ename,job,sal for salesman job--
SELECT EMPNO,ENAME,JOB,SAL
FROM EMP
WHERE JOB='SALESMAN';
--SAL + null COMM is only
SELECT EMPNO,ENAME,JOB,SAL,COMM,SAL+COMM
FROM EMP
--make null comm as zero--
SELECT EMPNO,ENAME,JOB,SAL, isnull(COMM,0) AS COMM,SAL + COMM
FROM EMP;
SELECT EMPNO,ENAME,JOB,SAL, isnull(COMM,0) AS COMM,SAL + isnull(COMM,0) AS GROSSSAL
FROM EMP;
SELECT EMPNO,ENAME,JOB,SAL, isnull(COMM,0) AS COMM,SAL + isnull(COMM,0) AS GROSSSAL
FROM EMP
ORDER BY COMM DESC;
SELECT EMPNO,ENAME,JOB,SAL, isnull(COMM,0) AS COMM1,SAL + isnull(COMM,0) AS GROSSSAL
FROM EMP
ORDER BY COMM DESC;
SELECT EMPNO,ENAME,JOB,SAL, isnull(COMM,0) AS COMM1,SAL + isnull(COMM,0) AS GROSSSAL
FROM EMP
ORDER BY COMM1 DESC;
SELECT EMPNO,ENAME,JOB,SAL, isnull(COMM,0) AS COMM1,SAL + isnull(COMM,0) AS GROSSSAL
FROM EMP
ORDER BY 5 DESC;
SELECT 500.0/800.0*100;
SELECT EMPNO,ENAME,JOB,SAL, isnull(COMM,0) AS COMM1,SAL + isnull(COMM,0) AS GROSSSAL
FROM EMP;
SELECT EMPNO,ENAME,JOB,SAL,isnull(COMM,0) AS COMM,isnull(COMM,0)/(isnull(COMM,0) + SAL)*100 AS COMM_PER
FROM EMP;
//find age
SELECT '2000-03-11' BIRTH_DATE,getdate() TODAY_DATE,
DATEDIFF(YEAR,'2000-03-11', getdate()) AGE;
SELECT EMPNO,ENAME,HIREDATE,DATEDIFF(YEAR,HIREDATE,getdate()) as EXPERIENCE,58 as MAX_AGE
FROM EMP;
//ARITH
SELECT 8-3,8+3,8/3,8*3;
---FLITERING,AGGREGATOR,GROUP BY,SUB QUERY,JOINS-------
1.-----display employees whose salary is below 2500-----
SELECT EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO
FROM emp 
WHERE SAL<2500;
2.--------display employees whose salary is above 2500-----
SELECT EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO
FROM emp 
WHERE SAL>2500;
3.--------display employees whose salary is below or equal 2500-----
SELECT EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO
FROM emp 
WHERE SAL<=2500;
3.--------display employees whose salary is above or equal 2500-----
SELECT EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO
FROM emp 
WHERE SAL>=2500;
4.--------display employees whose salary is equal 3000-----
SELECT EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO
FROM emp 
WHERE SAL=3000;
4.--------display employees whose salary is not equal 3000-----
SELECT EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO
FROM emp 
WHERE SAL!=3000;
-----------<>ANSI STD FOR !=-------------
4.--------display employees whose salary is not any of 3000,1250-----
SELECT EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO
FROM emp 
WHERE SAL NOT IN (3000,1250);
-------SAL NOT IN (3000,1250)--------------
----------SAL!=3000 AND SAL!=1250-----------
4.--------display employees whose salary is  any of 3000,1250-----
SELECT EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO
FROM emp 
WHERE SAL=3000 OR SAL=1250;
-------------WHERE SAL IN(3000,1250)-------------------
4.--------display employees whose salary is  BETWEEN 2000,3500-----
SELECT EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO
FROM emp 
WHERE SAL>=2000 AND SAL<=3500;
--------SAL BETWEEN 2000 AND 3500---------------
5.SELECT EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO
FROM emp 
WHERE SAL NOT BETWEEN 2000 AND 3500;
6.-----display employees whose name start with s---------
SELECT EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO
FROM emp 
WHERE ENAME LIKE 'S%';
7..-----display employees whose name ends with d---------
SELECT EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO
FROM emp 
WHERE ENAME LIKE '%D';
7..-----display employees whose name contains with am---------
SELECT EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO
FROM emp 
WHERE ENAME LIKE '%am%';
.8-----display employees whose name not start with s---------
SELECT EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO
FROM emp 
WHERE ENAME NOT LIKE 'S%';
7..-----display employees whose name ends with d---------
SELECT EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO
FROM emp 
WHERE ENAME NOT LIKE '%D';
7..-----display employees whose name contains with am---------
SELECT EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO
FROM emp 
WHERE ENAME NOT LIKE '%am%';

-----------AGGREGATORS,GROUP BY|HAVING---------------
--aggregators find the aggregated value:sum,avg,min,max,count---
----1.to find no of dept-----
SELECT COUNT(*)AS NUMBER_OF_DEPT FROM DEPT;
----2.to find no of employees-------
SELECT COUNT(*)AS NUMBER_OF_EMPLOYEES FROM EMP;
----3.to find sum of salary-------
SELECT SUM(SAL)AS TOTAL_SAL FROM EMP;
----4.to find avg of salary-------
SELECT AVG(SAL)/COUNT(*) AS AVG_SAL FROM EMP;
----5.to find min salary-------
SELECT MIN(SAL) AS MIN_SAL FROM EMP;
----6.to find max salary-------
SELECT MAX(SAL) AS MIN_SAL FROM EMP;
----7.to find avg experience salary-------
SELECT AVG(DATEDIFF(YEAR,HIREDATE,GETDATE())) AS AVG_EXP
FROM EMP;
----7.to DISPLAY number of emp, avg experience,sum experience salary-------
SELECT 
COUNT(*) AS NUM_OF_EXP,
SUM(DATEDIFF(YEAR,HIREDATE,GETDATE())) AS TOT_EXP,
AVG(DATEDIFF(YEAR,HIREDATE,GETDATE())) AS AVG_EXP
FROM EMP;
----7.to DISPLAY diff bw min and max salary-------
SELECT MAX(SAL) -MIN(SAL) AS TOT_SAL_OF_SALESPERSON
FROM EMP;
----------total sal of salesman---------
SELECT SUM(SAL) AS TOTAL_SAL_OF_SALESPERSON
FROM EMP 
WHERE JOB ='SALESMAN';
--------------group by used to categorise rows into groups--------
SELECT JOB FROM EMP;
SELECT DISTINCT JOB FROM EMP;
---------TO COUNT DISTINCT JOB---------
SELECT COUNT(DISTINCT JOB)FROM EMP;
--------to display distinct job without keywrd distinct-------
SELECT JOB
FROM EMP
GROUP BY JOB;
---------to find each job title total salary-----
SELECT JOB,SUM(SAL) JOB_SAL
FROM EMP
GROUP BY JOB;
---------to find each Deptno avg salary and max salary-----
SELECT DEPTNO,AVG(SAL),MAX(SAL) as DEPT_MAX_SAL
FROM EMP
GROUP BY DEPTNO;
------------to find experience based total salary-----
SELECT DATEDIFF(YEAR,HIREDATE,GETDATE()) AS EXPERIENCE,SUM(SAL) AS EXP_SAL
FROM EMP
GROUP BY DATEDIFF(YEAR,HIREDATE,GETDATE())
-------------to find deptno total salary and total salary below 5000----
SELECT DEPTNO,SUM(SAL) AS DEPT_SAL
FROM EMP
GROUP BY DEPTNO;
-------TO FILTER SAL BELOW 9000------------
-----------TO FILTER AFTER GROUP CANNOT USE WHERE CONDITION----
-----------TO FILTER AFTER GROUP USE HAVING CLAUSE-------
----------HAVING IS FILTERING USED WITH GROUP BY------
----------------
SELECT DEPTNO,SUM(SAL) AS DEPT_SAL
FROM EMP
GROUP BY DEPTNO
HAVING SUM(SAL)<9000;

SELECT JOB,SUM(SAL) AS JOB_SAL
FROM EMP
GROUP BY JOB
HAVING SUM(SAL)>=6000;

-----------sort reverse job order-----------
SELECT JOB,SUM(SAL) AS JOB_SAL
FROM EMP
GROUP BY JOB
HAVING SUM(SAL)>=6000
ORDER BY JOB DESC;
------------TO FIND DEPT BASED AND THEN JOB BASED TOTAL SAL---------
SELECT DEPTNO,JOB,COUNT(*) AS DEPT_JOB_COUNT,SUM(SAL) AS DEPT_JOB_SAL
FROM EMP
GROUP BY DEPTNO,JOB
ORDER BY DEPTNO,JOB;
